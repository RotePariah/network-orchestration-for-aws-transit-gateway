# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Deploys a simple VPC with private subnet per AZ, tagged suitably for STNO
  to automate, and for the end-to-end tests to use.

Parameters:
  VpcCIDR:
    Description: CIDR Range for the VPC
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    Default: 172.16.0.0/20
  VPCName:
    Description: VPC name
    Type: String
    Default: test-vpc-1
  SubnetHostLen:
    Description: Length of the host portion of the subnet (32-prefixlen)
    Type: Number
    MinValue: 4
    MaxValue: 12
    Default: 8
  SubnetsNum:
    Description: How many subnets to span
    Type: Number
    MinValue: 1
    MaxValue: 4
    Default: 4


Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
          - Key: Name
            Value: !Ref VPCName
          - Key: Associate-with
            Value: Flat
          - Key: Propagate-to
            Value: Flat

  RouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  RouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  RouteTable3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  RouteTable4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Select [0, !Cidr [ !Ref VpcCIDR, !Ref SubnetsNum, !Ref SubnetHostLen ] ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-AZ1-S1
        - Key: Attach-to-tgw
          Value: ""
        - Key: Setup
          Value: Add this subnet to attachment changes and only add route to explicit route table

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Select [1, !Cidr [ !Ref VpcCIDR, !Ref SubnetsNum, !Ref SubnetHostLen ] ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-AZ2-S2
        - Key: Attach-to-tgw
          Value: ""
        - Key: Setup
          Value: Add this subnet to attachment changes and only add route to explicit route table

  Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Select [2, !Cidr [ !Ref VpcCIDR, !Ref SubnetsNum, !Ref SubnetHostLen ] ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-AZ1-S3
        - Key: Route-to-tgw
          Value: ""
        - Key: Setup
          Value: Skip attachment changes and only add route to explicit route table

  Subnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Select [3, !Cidr [ !Ref VpcCIDR, !Ref SubnetsNum, !Ref SubnetHostLen ] ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-AZ2-S4
        - Key: Attach-to-tgw
          Value: ""
        - Key: Setup
          Value: Associated with Main Route table and Should fail to attach since this is duplicate subnet in AZ

  RouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable1
      SubnetId: !Ref Subnet1

  RouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable2
      SubnetId: !Ref Subnet2

  RouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable3
      SubnetId: !Ref Subnet3

Outputs:
  AccountId:
    Description: ID of this account
    Value: !Sub "${AWS::AccountId}"
  VpcId:
    Description: ID of the new VPC
    Value: !Ref VPC
  Subnet1:
    Description: ID of the subnet in AZ1
    Value: !Ref Subnet1
  Subnet1Range:
    Description: CIDR range of the subnet in AZ1
    Value: !Select [0, !Cidr [ !Ref VpcCIDR, !Ref SubnetsNum, !Ref SubnetHostLen ] ]
  Subnet2:
    Description: ID of the subnet in AZ2
    Value: !Ref Subnet2
  Subnet2Range:
    Description: CIDR range of the subnet in AZ2
    Value: !Select [1, !Cidr [ !Ref VpcCIDR, !Ref SubnetsNum, !Ref SubnetHostLen ] ]
  Subnet3:
    Description: ID of the subnet in AZ1
    Value: !Ref Subnet3
  Subnet3Range:
    Description: CIDR range of the subnet in AZ1
    Value: !Select [2, !Cidr [ !Ref VpcCIDR, !Ref SubnetsNum, !Ref SubnetHostLen ] ]
  Subnet4:
    Description: ID of the subnet in AZ2
    Value: !Ref Subnet4
  Subnet4Range:
    Description: CIDR range of the subnet in AZ2
    Value: !Select [ 1, !Cidr [ !Ref VpcCIDR, !Ref SubnetsNum, !Ref SubnetHostLen ] ]

